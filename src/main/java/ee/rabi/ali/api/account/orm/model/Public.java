/*
 * This file is generated by jOOQ.
 */
package ee.rabi.ali.api.account.orm.model;


import ee.rabi.ali.api.account.orm.model.tables.Account;
import ee.rabi.ali.api.account.orm.model.tables.BalanceSnapshot;
import ee.rabi.ali.api.account.orm.model.tables.Ledger;
import ee.rabi.ali.api.account.orm.model.tables.Transfer;
import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import javax.annotation.processing.Generated;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.4"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Public extends SchemaImpl {

    private static final long serialVersionUID = -1404674946;

    /**
     * The reference instance of <code>PUBLIC</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>PUBLIC.ACCOUNT</code>.
     */
    public final Account ACCOUNT = ee.rabi.ali.api.account.orm.model.tables.Account.ACCOUNT;

    /**
     * The table <code>PUBLIC.BALANCE_SNAPSHOT</code>.
     */
    public final BalanceSnapshot BALANCE_SNAPSHOT = ee.rabi.ali.api.account.orm.model.tables.BalanceSnapshot.BALANCE_SNAPSHOT;

    /**
     * The table <code>PUBLIC.LEDGER</code>.
     */
    public final Ledger LEDGER = ee.rabi.ali.api.account.orm.model.tables.Ledger.LEDGER;

    /**
     * The table <code>PUBLIC.TRANSFER</code>.
     */
    public final Transfer TRANSFER = ee.rabi.ali.api.account.orm.model.tables.Transfer.TRANSFER;

    /**
     * No further instances allowed
     */
    private Public() {
        super("PUBLIC", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
                Account.ACCOUNT,
                BalanceSnapshot.BALANCE_SNAPSHOT,
                Ledger.LEDGER,
                Transfer.TRANSFER);
    }
}
