/*
 * This file is generated by jOOQ.
 */
package ee.rabi.ali.api.account.orm.model.tables.records;


import ee.rabi.ali.api.account.orm.model.tables.BalanceSnapshot;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.processing.Generated;
import java.math.BigDecimal;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.4"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class BalanceSnapshotRecord extends UpdatableRecordImpl<BalanceSnapshotRecord> implements Record4<String, BigDecimal, Timestamp, Integer> {

    private static final long serialVersionUID = 2134272854;

    /**
     * Setter for <code>PUBLIC.BALANCE_SNAPSHOT.ACCOUNT_ID</code>.
     */
    public void setAccountId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.BALANCE_SNAPSHOT.ACCOUNT_ID</code>.
     */
    public String getAccountId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>PUBLIC.BALANCE_SNAPSHOT.BALANCE</code>.
     */
    public void setBalance(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.BALANCE_SNAPSHOT.BALANCE</code>.
     */
    public BigDecimal getBalance() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>PUBLIC.BALANCE_SNAPSHOT.UPDATED_AT</code>.
     */
    public void setUpdatedAt(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.BALANCE_SNAPSHOT.UPDATED_AT</code>.
     */
    public Timestamp getUpdatedAt() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>PUBLIC.BALANCE_SNAPSHOT.VERSION</code>.
     */
    public void setVersion(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.BALANCE_SNAPSHOT.VERSION</code>.
     */
    public Integer getVersion() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, BigDecimal, Timestamp, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, BigDecimal, Timestamp, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return BalanceSnapshot.BALANCE_SNAPSHOT.ACCOUNT_ID;
    }

    @Override
    public Field<BigDecimal> field2() {
        return BalanceSnapshot.BALANCE_SNAPSHOT.BALANCE;
    }

    @Override
    public Field<Timestamp> field3() {
        return BalanceSnapshot.BALANCE_SNAPSHOT.UPDATED_AT;
    }

    @Override
    public Field<Integer> field4() {
        return BalanceSnapshot.BALANCE_SNAPSHOT.VERSION;
    }

    @Override
    public String component1() {
        return getAccountId();
    }

    @Override
    public BigDecimal component2() {
        return getBalance();
    }

    @Override
    public Timestamp component3() {
        return getUpdatedAt();
    }

    @Override
    public Integer component4() {
        return getVersion();
    }

    @Override
    public String value1() {
        return getAccountId();
    }

    @Override
    public BigDecimal value2() {
        return getBalance();
    }

    @Override
    public Timestamp value3() {
        return getUpdatedAt();
    }

    @Override
    public Integer value4() {
        return getVersion();
    }

    @Override
    public BalanceSnapshotRecord value1(String value) {
        setAccountId(value);
        return this;
    }

    @Override
    public BalanceSnapshotRecord value2(BigDecimal value) {
        setBalance(value);
        return this;
    }

    @Override
    public BalanceSnapshotRecord value3(Timestamp value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public BalanceSnapshotRecord value4(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public BalanceSnapshotRecord values(String value1, BigDecimal value2, Timestamp value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BalanceSnapshotRecord
     */
    public BalanceSnapshotRecord() {
        super(BalanceSnapshot.BALANCE_SNAPSHOT);
    }

    /**
     * Create a detached, initialised BalanceSnapshotRecord
     */
    public BalanceSnapshotRecord(String accountId, BigDecimal balance, Timestamp updatedAt, Integer version) {
        super(BalanceSnapshot.BALANCE_SNAPSHOT);

        set(0, accountId);
        set(1, balance);
        set(2, updatedAt);
        set(3, version);
    }
}
