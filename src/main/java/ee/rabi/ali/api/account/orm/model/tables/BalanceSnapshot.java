/*
 * This file is generated by jOOQ.
 */
package ee.rabi.ali.api.account.orm.model.tables;


import ee.rabi.ali.api.account.orm.model.Indexes;
import ee.rabi.ali.api.account.orm.model.Keys;
import ee.rabi.ali.api.account.orm.model.Public;
import ee.rabi.ali.api.account.orm.model.tables.records.BalanceSnapshotRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.processing.Generated;
import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.4"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class BalanceSnapshot extends TableImpl<BalanceSnapshotRecord> {

    private static final long serialVersionUID = 175231876;

    /**
     * The reference instance of <code>PUBLIC.BALANCE_SNAPSHOT</code>
     */
    public static final BalanceSnapshot BALANCE_SNAPSHOT = new BalanceSnapshot();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BalanceSnapshotRecord> getRecordType() {
        return BalanceSnapshotRecord.class;
    }

    /**
     * The column <code>PUBLIC.BALANCE_SNAPSHOT.ACCOUNT_ID</code>.
     */
    public final TableField<BalanceSnapshotRecord, String> ACCOUNT_ID = createField(DSL.name("ACCOUNT_ID"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.BALANCE_SNAPSHOT.BALANCE</code>.
     */
    public final TableField<BalanceSnapshotRecord, BigDecimal> BALANCE = createField(DSL.name("BALANCE"), org.jooq.impl.SQLDataType.DECIMAL.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.BALANCE_SNAPSHOT.UPDATED_AT</code>.
     */
    public final TableField<BalanceSnapshotRecord, Timestamp> UPDATED_AT = createField(DSL.name("UPDATED_AT"), org.jooq.impl.SQLDataType.TIMESTAMP.precision(6).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.BALANCE_SNAPSHOT.VERSION</code>.
     */
    public final TableField<BalanceSnapshotRecord, Integer> VERSION = createField(DSL.name("VERSION"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.BALANCE_SNAPSHOT</code> table reference
     */
    public BalanceSnapshot() {
        this(DSL.name("BALANCE_SNAPSHOT"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.BALANCE_SNAPSHOT</code> table reference
     */
    public BalanceSnapshot(String alias) {
        this(DSL.name(alias), BALANCE_SNAPSHOT);
    }

    /**
     * Create an aliased <code>PUBLIC.BALANCE_SNAPSHOT</code> table reference
     */
    public BalanceSnapshot(Name alias) {
        this(alias, BALANCE_SNAPSHOT);
    }

    private BalanceSnapshot(Name alias, Table<BalanceSnapshotRecord> aliased) {
        this(alias, aliased, null);
    }

    private BalanceSnapshot(Name alias, Table<BalanceSnapshotRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> BalanceSnapshot(Table<O> child, ForeignKey<O, BalanceSnapshotRecord> key) {
        super(child, key, BALANCE_SNAPSHOT);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRIMARY_KEY_2);
    }

    @Override
    public UniqueKey<BalanceSnapshotRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_2;
    }

    @Override
    public List<UniqueKey<BalanceSnapshotRecord>> getKeys() {
        return Arrays.<UniqueKey<BalanceSnapshotRecord>>asList(Keys.CONSTRAINT_2);
    }

    @Override
    public BalanceSnapshot as(String alias) {
        return new BalanceSnapshot(DSL.name(alias), this);
    }

    @Override
    public BalanceSnapshot as(Name alias) {
        return new BalanceSnapshot(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BalanceSnapshot rename(String name) {
        return new BalanceSnapshot(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BalanceSnapshot rename(Name name) {
        return new BalanceSnapshot(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, BigDecimal, Timestamp, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
