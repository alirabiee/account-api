plugins {
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"
    id "checkstyle"
    id 'jacoco'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

version "0.1"
group "ee.rabi.ali.api.account"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    annotationProcessor "org.projectlombok:lombok:1.18.12"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.12"
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut.configuration:micronaut-openapi"
    compile "io.swagger.core.v3:swagger-annotations"
    compile "org.projectlombok:lombok:1.18.12"
    testCompile "org.projectlombok:lombok:1.18.12"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "javax.annotation:javax.annotation-api"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testImplementation("io.github.netmikey.logunit:logunit-core:1.1.0")
    testRuntimeOnly("io.github.netmikey.logunit:logunit-logback:1.1.0")
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testCompile 'org.mockito:mockito-junit-jupiter:3.2.4'
    testCompile 'org.assertj:assertj-core:3.15.0'
    compile 'org.flywaydb:flyway-core:6.2.2'
    compile 'com.h2database:h2:1.4.200'
    compile 'org.jooq:jooq:3.12.4'
    compile 'org.jooq:jooq-meta:3.12.4'
    compile 'org.jooq:jooq-codegen:3.12.4'
}

test.classpath += configurations.developmentOnly

mainClassName = "ee.rabi.ali.api.account.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

checkstyle {
    configFile = file("${project.rootDir}/checkstyle/checkstyle.xml")
    configDir = file("${project.rootDir}/checkstyle/")
    toolVersion '8.28'
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
